// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: reservations.sql

package database

import (
	"context"
	"time"
)

const createReservation = `-- name: CreateReservation :one
INSERT INTO reservations (id, car_id, start_date, end_date)
VALUES (?, ?, ?, ?)
RETURNING id, car_id, start_date, end_date
`

type CreateReservationParams struct {
	ID        string
	CarID     string
	StartDate time.Time
	EndDate   time.Time
}

func (q *Queries) CreateReservation(ctx context.Context, arg CreateReservationParams) (Reservation, error) {
	row := q.db.QueryRowContext(ctx, createReservation,
		arg.ID,
		arg.CarID,
		arg.StartDate,
		arg.EndDate,
	)
	var i Reservation
	err := row.Scan(
		&i.ID,
		&i.CarID,
		&i.StartDate,
		&i.EndDate,
	)
	return i, err
}

const resetReservations = `-- name: ResetReservations :exec
DELETE FROM reservations
`

func (q *Queries) ResetReservations(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, resetReservations)
	return err
}
